"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mdast-util-definitions";
exports.ids = ["vendor-chunks/mdast-util-definitions"];
exports.modules = {

/***/ "(rsc)/./node_modules/mdast-util-definitions/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/mdast-util-definitions/lib/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   definitions: () => (/* binding */ definitions)\n/* harmony export */ });\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-visit */ \"(rsc)/./node_modules/unist-util-visit/lib/index.js\");\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */ /**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */ \nconst own = {}.hasOwnProperty;\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */ function definitions(tree) {\n    /** @type {Record<string, Definition>} */ const cache = Object.create(null);\n    if (!tree || !tree.type) {\n        throw new Error(\"mdast-util-definitions expected node\");\n    }\n    (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_0__.visit)(tree, \"definition\", (definition)=>{\n        const id = clean(definition.identifier);\n        if (id && !own.call(cache, id)) {\n            cache[id] = definition;\n        }\n    });\n    return definition;\n    /** @type {GetDefinition} */ function definition(identifier) {\n        const id = clean(identifier);\n        // To do: next major: return `undefined` when not found.\n        return id && own.call(cache, id) ? cache[id] : null;\n    }\n}\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */ function clean(value) {\n    return String(value || \"\").toUpperCase();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1kZWZpbml0aW9ucy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztDQUlDLEdBRUQ7Ozs7Ozs7OztDQVNDLEdBRXFDO0FBRXRDLE1BQU1DLE1BQU0sQ0FBQyxFQUFFQyxjQUFjO0FBRTdCOzs7Ozs7Ozs7O0NBVUMsR0FDTSxTQUFTQyxZQUFZQyxJQUFJO0lBQzlCLHVDQUF1QyxHQUN2QyxNQUFNQyxRQUFRQyxPQUFPQyxNQUFNLENBQUM7SUFFNUIsSUFBSSxDQUFDSCxRQUFRLENBQUNBLEtBQUtJLElBQUksRUFBRTtRQUN2QixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFFQVQsdURBQUtBLENBQUNJLE1BQU0sY0FBYyxDQUFDTTtRQUN6QixNQUFNQyxLQUFLQyxNQUFNRixXQUFXRyxVQUFVO1FBQ3RDLElBQUlGLE1BQU0sQ0FBQ1YsSUFBSWEsSUFBSSxDQUFDVCxPQUFPTSxLQUFLO1lBQzlCTixLQUFLLENBQUNNLEdBQUcsR0FBR0Q7UUFDZDtJQUNGO0lBRUEsT0FBT0E7SUFFUCwwQkFBMEIsR0FDMUIsU0FBU0EsV0FBV0csVUFBVTtRQUM1QixNQUFNRixLQUFLQyxNQUFNQztRQUNqQix3REFBd0Q7UUFDeEQsT0FBT0YsTUFBTVYsSUFBSWEsSUFBSSxDQUFDVCxPQUFPTSxNQUFNTixLQUFLLENBQUNNLEdBQUcsR0FBRztJQUNqRDtBQUNGO0FBRUE7OztDQUdDLEdBQ0QsU0FBU0MsTUFBTUcsS0FBSztJQUNsQixPQUFPQyxPQUFPRCxTQUFTLElBQUlFLFdBQVc7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmVjZWRlbnQvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1kZWZpbml0aW9ucy9saWIvaW5kZXguanM/NWVlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUm9vdH0gUm9vdFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Db250ZW50fSBDb250ZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkRlZmluaXRpb259IERlZmluaXRpb25cbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtSb290IHwgQ29udGVudH0gTm9kZVxuICpcbiAqIEBjYWxsYmFjayBHZXREZWZpbml0aW9uXG4gKiAgIEdldCBhIGRlZmluaXRpb24gYnkgaWRlbnRpZmllci5cbiAqIEBwYXJhbSB7c3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2lkZW50aWZpZXJdXG4gKiAgIElkZW50aWZpZXIgb2YgZGVmaW5pdGlvbi5cbiAqIEByZXR1cm5zIHtEZWZpbml0aW9uIHwgbnVsbH1cbiAqICAgRGVmaW5pdGlvbiBjb3JyZXNwb25kaW5nIHRvIGBpZGVudGlmaWVyYCBvciBgbnVsbGAuXG4gKi9cblxuaW1wb3J0IHt2aXNpdH0gZnJvbSAndW5pc3QtdXRpbC12aXNpdCdcblxuY29uc3Qgb3duID0ge30uaGFzT3duUHJvcGVydHlcblxuLyoqXG4gKiBGaW5kIGRlZmluaXRpb25zIGluIGB0cmVlYC5cbiAqXG4gKiBVc2VzIENvbW1vbk1hcmsgcHJlY2VkZW5jZSwgd2hpY2ggbWVhbnMgdGhhdCBlYXJsaWVyIGRlZmluaXRpb25zIGFyZVxuICogcHJlZmVycmVkIG92ZXIgZHVwbGljYXRlIGxhdGVyIGRlZmluaXRpb25zLlxuICpcbiAqIEBwYXJhbSB7Tm9kZX0gdHJlZVxuICogICBUcmVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge0dldERlZmluaXRpb259XG4gKiAgIEdldHRlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmluaXRpb25zKHRyZWUpIHtcbiAgLyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBEZWZpbml0aW9uPn0gKi9cbiAgY29uc3QgY2FjaGUgPSBPYmplY3QuY3JlYXRlKG51bGwpXG5cbiAgaWYgKCF0cmVlIHx8ICF0cmVlLnR5cGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ21kYXN0LXV0aWwtZGVmaW5pdGlvbnMgZXhwZWN0ZWQgbm9kZScpXG4gIH1cblxuICB2aXNpdCh0cmVlLCAnZGVmaW5pdGlvbicsIChkZWZpbml0aW9uKSA9PiB7XG4gICAgY29uc3QgaWQgPSBjbGVhbihkZWZpbml0aW9uLmlkZW50aWZpZXIpXG4gICAgaWYgKGlkICYmICFvd24uY2FsbChjYWNoZSwgaWQpKSB7XG4gICAgICBjYWNoZVtpZF0gPSBkZWZpbml0aW9uXG4gICAgfVxuICB9KVxuXG4gIHJldHVybiBkZWZpbml0aW9uXG5cbiAgLyoqIEB0eXBlIHtHZXREZWZpbml0aW9ufSAqL1xuICBmdW5jdGlvbiBkZWZpbml0aW9uKGlkZW50aWZpZXIpIHtcbiAgICBjb25zdCBpZCA9IGNsZWFuKGlkZW50aWZpZXIpXG4gICAgLy8gVG8gZG86IG5leHQgbWFqb3I6IHJldHVybiBgdW5kZWZpbmVkYCB3aGVuIG5vdCBmb3VuZC5cbiAgICByZXR1cm4gaWQgJiYgb3duLmNhbGwoY2FjaGUsIGlkKSA/IGNhY2hlW2lkXSA6IG51bGxcbiAgfVxufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3ZhbHVlXVxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gY2xlYW4odmFsdWUpIHtcbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSB8fCAnJykudG9VcHBlckNhc2UoKVxufVxuIl0sIm5hbWVzIjpbInZpc2l0Iiwib3duIiwiaGFzT3duUHJvcGVydHkiLCJkZWZpbml0aW9ucyIsInRyZWUiLCJjYWNoZSIsIk9iamVjdCIsImNyZWF0ZSIsInR5cGUiLCJFcnJvciIsImRlZmluaXRpb24iLCJpZCIsImNsZWFuIiwiaWRlbnRpZmllciIsImNhbGwiLCJ2YWx1ZSIsIlN0cmluZyIsInRvVXBwZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mdast-util-definitions/lib/index.js\n");

/***/ })

};
;